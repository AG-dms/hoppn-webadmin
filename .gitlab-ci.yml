services:
  - docker:dind

variables:
  NGINX_IMAGE: $CI_REGISTRY_IMAGE/nginx
  FF_USE_FASTZIP: 'true'
  ARTIFACT_COMPRESSION_LEVEL: 'fastest'
  CACHE_COMPRESSION_LEVEL: 'fastest'

stages:
  - build
  - docker

build_frontend:
  stage: build
  only:
    - test
    - main
  image: node:16-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .yarn/cache/
  before_script:
    - apk add --no-cache autoconf automake file g++ libtool make nasm libpng-dev
  script:
    - yarn install --immutable
    - yarn build
  artifacts:
    paths:
      - public/dist/

build_image:
  stage: docker
  only:
    - test
    - main
  image: docker:stable
  dependencies:
    - build_frontend
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull "$NGINX_IMAGE:$CI_COMMIT_REF_SLUG" || true
    - >-
      docker build
      --cache-from "$NGINX_IMAGE:$CI_COMMIT_REF_SLUG"
      -f ./nginx/Dockerfile
      --tag "$NGINX_IMAGE:$CI_COMMIT_REF_SLUG"
      --tag "$NGINX_IMAGE:$CI_COMMIT_SHA"
      --tag "$NGINX_IMAGE:latest"
      .
    - docker push "$NGINX_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$NGINX_IMAGE:$CI_COMMIT_SHA"
    - docker push "$NGINX_IMAGE:latest"
